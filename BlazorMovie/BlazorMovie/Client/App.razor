@inject LazyAssemblyLoader lazyLoader

<Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true" AdditionalAssemblies="assemblies" OnNavigateAsync="OnNavigationAsync">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <CustomNotFound></CustomNotFound>
        </LayoutView>
    </NotFound>
</Router>

@code{
    private List<Assembly> assemblies = new List<Assembly>();

    private async Task OnNavigationAsync(NavigationContext args)
    {
        if(args.Path.EndsWith("counter"))
        {
            var assembliesCargados = await lazyLoader.LoadAssembliesAsync(
                new List<string>
                {
                      "MathNet.Numerics.dll"
                });
            assemblies.AddRange(assembliesCargados);
        }
    }

}
